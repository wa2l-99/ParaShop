a:27:{i:0;a:6:{s:4:"type";i:8192;s:7:"message";s:229:"Return type of Symfony\Component\Form\Form::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:69:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/form/Form.php";s:4:"line";i:1009;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:110:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/framework-bundle/DependencyInjection/Configuration.php";s:4:"line";i:183;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:1;a:6:{s:4:"type";i:8192;s:7:"message";s:236:"Return type of Symfony\Component\Form\Form::offsetExists($name) should either be compatible with ArrayAccess::offsetExists(mixed $offset): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:69:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/form/Form.php";s:4:"line";i:957;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:110:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/framework-bundle/DependencyInjection/Configuration.php";s:4:"line";i:183;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:2;a:6:{s:4:"type";i:8192;s:7:"message";s:231:"Return type of Symfony\Component\Form\Form::offsetGet($name) should either be compatible with ArrayAccess::offsetGet(mixed $offset): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:69:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/form/Form.php";s:4:"line";i:971;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:110:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/framework-bundle/DependencyInjection/Configuration.php";s:4:"line";i:183;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:3;a:6:{s:4:"type";i:8192;s:7:"message";s:252:"Return type of Symfony\Component\Form\Form::offsetSet($name, $child) should either be compatible with ArrayAccess::offsetSet(mixed $offset, mixed $value): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:69:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/form/Form.php";s:4:"line";i:987;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:110:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/framework-bundle/DependencyInjection/Configuration.php";s:4:"line";i:183;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:4;a:6:{s:4:"type";i:8192;s:7:"message";s:234:"Return type of Symfony\Component\Form\Form::offsetUnset($name) should either be compatible with ArrayAccess::offsetUnset(mixed $offset): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:69:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/form/Form.php";s:4:"line";i:999;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:110:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/framework-bundle/DependencyInjection/Configuration.php";s:4:"line";i:183;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:5;a:6:{s:4:"type";i:8192;s:7:"message";s:201:"Return type of Symfony\Component\Form\Form::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:69:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/form/Form.php";s:4:"line";i:1019;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:110:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/framework-bundle/DependencyInjection/Configuration.php";s:4:"line";i:183;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:6;a:6:{s:4:"type";i:16384;s:7:"message";s:61:"Please install the "intl" PHP extension for best performance.";s:4:"file";s:115:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/framework-bundle/DependencyInjection/FrameworkExtension.php";s:4:"line";i:253;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:121:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/dependency-injection/Compiler/MergeExtensionConfigurationPass.php";s:4:"line";i:76;s:8:"function";s:4:"load";s:5:"class";s:69:"Symfony\Bundle\FrameworkBundle\DependencyInjection\FrameworkExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:7;a:6:{s:4:"type";i:8192;s:7:"message";s:246:"Return type of Symfony\Component\Security\Core\Exception\AuthenticationException::__wakeup() should either be compatible with Exception::__wakeup(): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:107:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/security-core/Exception/AuthenticationException.php";s:4:"line";i:115;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:115:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/framework-bundle/DependencyInjection/FrameworkExtension.php";s:4:"line";i:1184;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:8;a:6:{s:4:"type";i:8192;s:7:"message";s:233:"Return type of Symfony\Component\Finder\Finder::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:73:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/finder/Finder.php";s:4:"line";i:607;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:115:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/framework-bundle/DependencyInjection/FrameworkExtension.php";s:4:"line";i:399;s:8:"function";s:31:"registerTranslatorConfiguration";s:5:"class";s:69:"Symfony\Bundle\FrameworkBundle\DependencyInjection\FrameworkExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:9;a:6:{s:4:"type";i:8192;s:7:"message";s:205:"Return type of Symfony\Component\Finder\Finder::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:73:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/finder/Finder.php";s:4:"line";i:676;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:115:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/framework-bundle/DependencyInjection/FrameworkExtension.php";s:4:"line";i:399;s:8:"function";s:31:"registerTranslatorConfiguration";s:5:"class";s:69:"Symfony\Bundle\FrameworkBundle\DependencyInjection\FrameworkExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:10;a:6:{s:4:"type";i:8192;s:7:"message";s:238:"Return type of Symfony\Component\Finder\Iterator\FileTypeFilterIterator::accept() should either be compatible with FilterIterator::accept(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:98:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/finder/Iterator/FileTypeFilterIterator.php";s:4:"line";i:42;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:115:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/framework-bundle/DependencyInjection/FrameworkExtension.php";s:4:"line";i:1225;s:8:"function";s:5:"files";s:5:"class";s:31:"Symfony\Component\Finder\Finder";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:11;a:6:{s:4:"type";i:8192;s:7:"message";s:252:"Return type of Symfony\Component\Finder\Iterator\SortableIterator::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:92:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/finder/Iterator/SortableIterator.php";s:4:"line";i:85;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:115:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/framework-bundle/DependencyInjection/FrameworkExtension.php";s:4:"line";i:1230;s:8:"function";s:10:"sortByName";s:5:"class";s:31:"Symfony\Component\Finder\Finder";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:12;a:6:{s:4:"type";i:8192;s:7:"message";s:286:"Return type of Symfony\Component\Finder\Iterator\RecursiveDirectoryIterator::getChildren() should either be compatible with RecursiveDirectoryIterator::getChildren(): RecursiveDirectoryIterator, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:102:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/finder/Iterator/RecursiveDirectoryIterator.php";s:4:"line";i:85;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:73:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/finder/Finder.php";s:4:"line";i:619;s:8:"function";s:17:"searchInDirectory";s:5:"class";s:31:"Symfony\Component\Finder\Finder";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:13;a:6:{s:4:"type";i:8192;s:7:"message";s:246:"Return type of Symfony\Component\Finder\Iterator\RecursiveDirectoryIterator::rewind() should either be compatible with FilesystemIterator::rewind(): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:102:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/finder/Iterator/RecursiveDirectoryIterator.php";s:4:"line";i:113;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:73:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/finder/Finder.php";s:4:"line";i:619;s:8:"function";s:17:"searchInDirectory";s:5:"class";s:31:"Symfony\Component\Finder\Finder";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:14;a:6:{s:4:"type";i:8192;s:7:"message";s:281:"Return type of Symfony\Component\Finder\Iterator\RecursiveDirectoryIterator::current() should either be compatible with FilesystemIterator::current(): SplFileInfo|FilesystemIterator|string, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:102:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/finder/Iterator/RecursiveDirectoryIterator.php";s:4:"line";i:61;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:73:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/finder/Finder.php";s:4:"line";i:619;s:8:"function";s:17:"searchInDirectory";s:5:"class";s:31:"Symfony\Component\Finder\Finder";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:15;a:6:{s:4:"type";i:8192;s:7:"message";s:246:"Return type of Symfony\Component\Finder\Iterator\ExcludeDirectoryFilterIterator::accept() should either be compatible with FilterIterator::accept(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:106:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/finder/Iterator/ExcludeDirectoryFilterIterator.php";s:4:"line";i:55;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:73:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/finder/Finder.php";s:4:"line";i:619;s:8:"function";s:17:"searchInDirectory";s:5:"class";s:31:"Symfony\Component\Finder\Finder";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:16;a:6:{s:4:"type";i:8192;s:7:"message";s:259:"Return type of Symfony\Component\Finder\Iterator\ExcludeDirectoryFilterIterator::hasChildren() should either be compatible with RecursiveIterator::hasChildren(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:106:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/finder/Iterator/ExcludeDirectoryFilterIterator.php";s:4:"line";i:74;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:73:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/finder/Finder.php";s:4:"line";i:619;s:8:"function";s:17:"searchInDirectory";s:5:"class";s:31:"Symfony\Component\Finder\Finder";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:17;a:6:{s:4:"type";i:8192;s:7:"message";s:273:"Return type of Symfony\Component\Finder\Iterator\ExcludeDirectoryFilterIterator::getChildren() should either be compatible with RecursiveIterator::getChildren(): ?RecursiveIterator, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:106:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/finder/Iterator/ExcludeDirectoryFilterIterator.php";s:4:"line";i:79;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:73:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/finder/Finder.php";s:4:"line";i:619;s:8:"function";s:17:"searchInDirectory";s:5:"class";s:31:"Symfony\Component\Finder\Finder";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:18;a:6:{s:4:"type";i:8192;s:7:"message";s:236:"Return type of Symfony\Component\Finder\Iterator\CustomFilterIterator::accept() should either be compatible with FilterIterator::accept(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:96:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/finder/Iterator/CustomFilterIterator.php";s:4:"line";i:49;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:73:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/finder/Finder.php";s:4:"line";i:619;s:8:"function";s:17:"searchInDirectory";s:5:"class";s:31:"Symfony\Component\Finder\Finder";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:19;a:6:{s:4:"type";i:8192;s:7:"message";s:234:"Return type of Symfony\Component\Finder\Iterator\PathFilterIterator::accept() should either be compatible with FilterIterator::accept(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:94:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/finder/Iterator/PathFilterIterator.php";s:4:"line";i:27;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:73:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/finder/Finder.php";s:4:"line";i:619;s:8:"function";s:17:"searchInDirectory";s:5:"class";s:31:"Symfony\Component\Finder\Finder";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:20;a:6:{s:4:"type";i:8192;s:7:"message";s:76:"ltrim(): Passing null to parameter #1 ($string) of type string is deprecated";s:4:"file";s:130:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/http-kernel/DependencyInjection/RegisterControllerArgumentLocatorsPass.php";s:4:"line";i:134;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:98:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/dependency-injection/Compiler/Compiler.php";s:4:"line";i:91;s:8:"function";s:7:"process";s:5:"class";s:87:"Symfony\Component\HttpKernel\DependencyInjection\RegisterControllerArgumentLocatorsPass";s:4:"type";s:2:"->";}}s:5:"count";i:21;}i:21;a:6:{s:4:"type";i:8192;s:7:"message";s:264:"Return type of EasyCorp\Bundle\EasyAdminBundle\Collection\FieldCollection::offsetGet($offset) should either be compatible with ArrayAccess::offsetGet(mixed $offset): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:108:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/easycorp/easyadmin-bundle/src/Collection/FieldCollection.php";s:4:"line";i:80;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:130:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/http-kernel/DependencyInjection/RegisterControllerArgumentLocatorsPass.php";s:4:"line";i:172;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:22;a:6:{s:4:"type";i:8192;s:7:"message";s:260:"Return type of EasyCorp\Bundle\EasyAdminBundle\Collection\FieldCollection::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:108:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/easycorp/easyadmin-bundle/src/Collection/FieldCollection.php";s:4:"line";i:103;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:130:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/http-kernel/DependencyInjection/RegisterControllerArgumentLocatorsPass.php";s:4:"line";i:172;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:23;a:6:{s:4:"type";i:8192;s:7:"message";s:265:"Return type of EasyCorp\Bundle\EasyAdminBundle\Collection\FilterCollection::offsetGet($offset) should either be compatible with ArrayAccess::offsetGet(mixed $offset): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:109:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/easycorp/easyadmin-bundle/src/Collection/FilterCollection.php";s:4:"line";i:50;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:130:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/http-kernel/DependencyInjection/RegisterControllerArgumentLocatorsPass.php";s:4:"line";i:172;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:24;a:6:{s:4:"type";i:8192;s:7:"message";s:261:"Return type of EasyCorp\Bundle\EasyAdminBundle\Collection\FilterCollection::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:109:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/easycorp/easyadmin-bundle/src/Collection/FilterCollection.php";s:4:"line";i:73;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:130:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/http-kernel/DependencyInjection/RegisterControllerArgumentLocatorsPass.php";s:4:"line";i:172;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:25;a:6:{s:4:"type";i:8192;s:7:"message";s:243:"Return type of Symfony\Component\Routing\RouteCollection::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:83:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/routing/RouteCollection.php";s:4:"line";i:59;s:5:"trace";a:3:{i:0;a:5:{s:4:"file";s:83:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/routing/RouteCollection.php";s:4:"line";i:26;s:8:"function";s:50:"Symfony\Component\HttpKernel\CacheWarmer\{closure}";s:5:"class";s:61:"Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate";s:4:"type";s:2:"->";}i:1;a:4:{s:4:"file";s:90:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:345;s:4:"args";a:1:{i:0;s:83:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/routing/RouteCollection.php";}s:8:"function";s:7:"include";}i:2;a:5:{s:4:"file";s:100:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/framework-bundle/Kernel/MicroKernelTrait.php";s:4:"line";i:177;s:8:"function";s:9:"loadClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:26;a:6:{s:4:"type";i:8192;s:7:"message";s:215:"Return type of Symfony\Component\Routing\RouteCollection::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:83:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/routing/RouteCollection.php";s:4:"line";i:69;s:5:"trace";a:3:{i:0;a:5:{s:4:"file";s:83:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/routing/RouteCollection.php";s:4:"line";i:26;s:8:"function";s:50:"Symfony\Component\HttpKernel\CacheWarmer\{closure}";s:5:"class";s:61:"Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate";s:4:"type";s:2:"->";}i:1;a:4:{s:4:"file";s:90:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:345;s:4:"args";a:1:{i:0;s:83:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/routing/RouteCollection.php";}s:8:"function";s:7:"include";}i:2;a:5:{s:4:"file";s:100:"/home/mo-salah/PhpstormProjects/ParaShop/vendor/symfony/framework-bundle/Kernel/MicroKernelTrait.php";s:4:"line";i:177;s:8:"function";s:9:"loadClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}}